@model AddOrEditAdvertVm
@using DreamCar.Services.Services.StaticClasses

@{
    ViewData["Title"] = "Dodawanie ogłoszenia";
}

@{
    if (ViewBag.ErrorList != null)
    {
        <div class="alertMessage alert alert-danger alert-dismissible fade show" role="alert">
            @foreach (var error in ViewBag.ErrorList)
            {
                <p>@error</p>
            }
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    if (TempData["AdvertAdded"] != null)
    {
        <div class="alertMessage alert alert-danger alert-dismissible fade show" role="alert">
            Wystąpił błąd podczas dodawania ogłoszenia :( Spróbuj ponownie.
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
}

<div class="modal fade" id="errorMessageModal" tabindex="-1" aria-labelledby="errorMessageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content bg-warning" style="border-radius: 1rem;">
            <div class="modal-footer d-flex justify-content-center align-items-center bg-warning" style="border-radius: 1rem;">
                <h5><strong>Wypełnij pola oznaczone gwiazdką by przejść dalej</strong></h5>
            </div>
        </div>
    </div>
</div>

<section class="pt-2">
    <div class="advertSection">
        <div class="container">
            <div class="row">
                <div id="infoAlert" class="alert alert-info alert-dismissible fade show" role="alert">
                    <h5>Zanim zaczniesz</h5>
                    Upewnij się, że masz dane pod ręką, usprawni to proces dodawania ogłoszenia :)
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    <hr />
                    <div class="d-flex justify-content-start align-items-center mb-3">
                        <icon class="icon-speedometer" style="font-size: 25px;"></icon>
                        <span style="margin-left: 10px;">Aktualny <strong>przebieg pojazdu</strong>, znajdziesz go na desce rozdzielczej</span>
                    </div>
                    <div class="d-flex justify-content-start align-items-center mb-3">
                        <icon class="icon-doc" style="font-size: 25px;"></icon>
                        <span style="margin-left: 10px;"><strong>Dowód rejestracyjny pojazdu</strong>, zawiera komplet informacji o pojeździe</span>
                    </div>
                    <div class="d-flex justify-content-start align-items-center">
                        <icon class="icon-camera" style="font-size: 25px;"></icon>
                        <span style="margin-left: 10px;"><strong>Dobre zdjęcia pojazdu</strong>, porządnie wykonane zdjęcia, zwiększają atrakcyjność ogłoszenia. Akceptowany format: <strong>jpg, png</strong></span>
                    </div>
                </div>
            </div>
            <form id="addAdvertForm" asp-action="AddOrEdit" asp-controller="Advert" method="post" enctype="multipart/form-data">
                @{
                    if (Model != null)
                    {
                        <h3 class="text-center infoHeader">Edycja ogłoszenia</h3>
                    }
                    else
                    {
                        <h3 class="text-center infoHeader">Dodawanie ogłoszenia</h3>
                        <h4 class="text-center">Formularz składa się z 5 etapów, wypełnij wszystkie wymagane pola</h4>
                    }
                }
                <hr />
                <div class="row">
                    <div class="tab">
                        @{
                            if (Model is not null)
                            {
                                await Html.RenderPartialAsync("_BasicCarInformationPartial", Model.Car);
                            }
                            else
                            {
                                await Html.RenderPartialAsync("_BasicCarInformationPartial");
                            }
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="tab">
                        @{
                            if (Model is not null)
                            {
                                await Html.RenderPartialAsync("_AdditionalCarEquipmentPartial", Model.Equipments);
                            }
                            else
                            {
                                await Html.RenderPartialAsync("_AdditionalCarEquipmentPartial");
                            }
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="tab" id="carImages">
                        @{
                            if (Model is not null)
                            {
                                await Html.RenderPartialAsync("~/Views/Image/_CarImagesUploadPartial.cshtml", Model.ImagesUploaded);
                            }
                            else
                            {
                                await Html.RenderPartialAsync("~/Views/Image/_CarImagesUploadPartial.cshtml");
                            }
                        }
                    </div>
                 </div>
                <div class="row">
                    <div class="tab">
                        @{
                            if (Model is not null)
                            {
                                await Html.RenderPartialAsync("_AdditionalCarInformationPartial", Model.Car);
                            }
                            else
                            {
                                await Html.RenderPartialAsync("_AdditionalCarInformationPartial");
                            }
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="tab">
                        @{
                            if (Model is not null)
                            {
                                await Html.RenderPartialAsync("_AdvertInformationPartial", Model.Advert);
                            }
                            else
                            {
                                await Html.RenderPartialAsync("_AdvertInformationPartial");
                            }
                        }
                    </div>
                </div>
                <div class="float-start">
                    <button id="prevBtn" type="button" class="btn btn-primary backButton" onclick="nextPrev(-1)">
                        Powrót
                    </button>
                </div>
                <div class="float-end">
                    <button id="nextBtn" type="button" class="btn btn-primary goToButton" onclick="checkFields()">
                        Przejdź dalej
                    </button>
                </div>
                <div class="d-flex justify-content-around align-items-center" style="margin-top: 80px;">
                    <div class="step" data-bs-toggle="tooltip" data-bs-placement="top" title="Podstawowe informacje" data-bs-animation="true">
                        1
                    </div>
                    <div class="step" data-bs-toggle="tooltip" data-bs-placement="top" title="Wyposażenie" data-bs-animation="true">
                        2
                    </div>
                    <div class="step" data-bs-toggle="tooltip" data-bs-placement="top" title="Zdjęcia" data-bs-animation="true">
                        3
                    </div>
                    <div class="step" data-bs-toggle="tooltip" data-bs-placement="top" title="Dodatkowe informacje" data-bs-animation="true">
                        4
                    </div>
                    <div class="step" data-bs-toggle="tooltip" data-bs-placement="top" title="Ogłoszenie" data-bs-animation="true">
                        5
                    </div>
                </div>
                <div class="progress mt-4 mb-5">
                    <div class="progress-bar progress-bar-striped progress-bar-animated bg-primary" role="progressbar" aria-valuemin="0" aria-valuemax="100" style="width: 0%;">
                    </div>
                </div>
            </form>
        </div>
    </div>
</section>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/assets/js/addNewAdvert.js"></script>
    <script src="~/assets/js/imageUploadValidation.js"></script>
    <script>
        $(document).ready(function () {
            $('#price').mask("#,##0.00", { reverse: true });
            $("#phoneNumber").mask('(99) 999-999-999');
        });
        $("#showMoreButton").click(function () {
            if ($("#showMoreButton").text() === 'Wyświetl pozostałe') {
                $("#showMoreButton").html('Ukryj');
            }
            else {
                $("#showMoreButton").html('Wyświetl pozostałe');
            }
            $(".otherEqu").slideToggle(500);
            if ($(".otherEqu").is(":visible")) {
                $('html,body').animate({
                    scrollTop: $(".otherEqu").offset().top
                }, 'slow');
            }
        });

        $('#carImages').on('click', 'img', async function () {
            const advertId = $("#advertId").val();
            const imageName = $(this).attr('src').substr($(this).attr('src').lastIndexOf('/') + 1);
            const result = await $.get("/Image/DeleteImage", $.param({
                advertId: advertId, imageName: imageName
            }));
            $("#carImages").html(result);
        });

        $("#voivodeship").children('option').click(function () {
            if ($(this).filter(':selected').val() != "") {
                $("#localization").removeAttr('disabled');
            }
        });

        $("#localization").on('focusout, change', function () {
            let previous = $(this).val().toString();
            let voivodeship = $("#voivodeship").children('option').filter(':selected').val().toString();
            if (!previous.includes(voivodeship)) {
                $(this).val(previous + ", " + voivodeship);
            }
        });
    </script>
    <script src="~/assets/js/autoCompleteInputFields.js"></script>
    <script src="~/assets/js/disabledElements.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=@AesOperationService.GetGoogleMapsApiKey()&language=pl&region=PL&callback=initAutocomplete&libraries=places&v=weekly" async></script>
    <script src="~/assets/js/googleSearchBox.js"></script>
}
